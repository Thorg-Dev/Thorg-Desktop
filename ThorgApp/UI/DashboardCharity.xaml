<UserControl x:Class="GolemUI.DashboardCharity"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GolemUI"
             xmlns:animated="clr-namespace:GolemUI.UI.AnimatedIcons" 
             mc:Ignorable="d" 
             d:DesignHeight="690" d:DesignWidth="1112"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:dvm="clr-namespace:GolemUI.DesignViewModel"
             d:DataContext ="{d:DesignInstance {x:Type dvm:CharityViewModel}, IsDesignTimeCreatable=True}"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UI/Themes/Defaults.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/GpuCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Borders/PageBackground.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/PinkButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Borders/BlueBorder.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Scrollbars/SettingsScrollView.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/GpuCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/SliderCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/AdvancedSettingsButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/GradientButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/GolemLogo.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/HyperLinkButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/ComboBox/MiningModeComboBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/TrackBar/Slider.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Task_Type.xaml"/>
                <ResourceDictionary Source="/UI/Icons/CPU_icon.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Status_Card_error.xaml"/>
                <ResourceDictionary Source="/UI/Icons/Status_Ready_icon.xaml"/>
                <ResourceDictionary Source="/UI/Themes/TextBox/TextBoxInError.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Validation/ValidationTemplate.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Labels/InfoLabel.xaml"/>
                <ResourceDictionary Source="/UI/Themes/ErrorMsg/BenchmarkErrorMsg.xaml"/>
                <ResourceDictionary>
                    <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:PerformanceThrottlingEnum"/>
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Border Style="{DynamicResource PageBackground}" BorderThickness="1">
        <!--<Border.Background>
            <ImageBrush ImageSource="/__Media/screen_settings.png" Stretch="UniformToFill"/>
        </Border.Background>-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="88"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="88"/>

            </Grid.RowDefinitions>
            <Image  Grid.Column="2"  Source="/UI/Icons/DefaultStyle/png/Branding/app_logo.png" HorizontalAlignment="Right" VerticalAlignment="Top" Width="160" Margin="0,20,30,0"  Grid.RowSpan="2"/>
            <StackPanel Orientation="Horizontal"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0, 39, 0, 0" >
                <Border Width="232" Height="25" BorderThickness="1 0 0 0" BorderBrush="White" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20, 20, 0, 0">
                    <Label Margin ="26,-5" Padding="0"  Foreground="#FFFFFF" Content="Charity"  FontSize="24"></Label>
                </Border>
            </StackPanel>

            <!--<local:GpuMiningPanelUI x:Name="gpuMiningPanel" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Visible"/>-->

            <Grid Margin="50, 68, 30, 20" Width="auto" Height="auto" Grid.Row="1" Grid.ColumnSpan="3" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45" />
                    <RowDefinition Height="55"/>
                    <RowDefinition Height="*" MinHeight="320" />



                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.92*" />
                    <ColumnDefinition Width="0.17*"/>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="0.17*"/>
                    <ColumnDefinition Width="2*" />

                </Grid.ColumnDefinitions>
                <Border BorderBrush="Black" BorderThickness="1" Grid.RowSpan="3" Grid.ColumnSpan="5">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal"/>
                        <Grid Height="102" Width="362" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Height="25">
                                <Label Padding="0" Margin="0" Content="Charity Wallet" FontFamily="Segoe UI" FontWeight="Bold" FontSize="19" VerticalAlignment="Bottom"/>
                                <Label Margin="5,0,0,3" Padding="0"  Content="(Click name to edit)" FontWeight="Light" FontSize="10" VerticalAlignment="Bottom"/>
                            </StackPanel>
                            <Border BorderThickness="0,0,0,2"   Margin="0, 0,40,0"  Grid.Row="1" Height="20">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#45405D" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#FC476E" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#0FB2AB" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <StackPanel>
                                    <TextBox  MaxLength="45" x:Name="txtNodeName" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" BorderThickness="0"  VerticalAlignment="Top" Background="Transparent" Foreground="#eee" CaretBrush="#fff"  Padding="0,0,0,0" Margin="0">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding Path="CharityWallet" UpdateSourceTrigger="PropertyChanged" Delay="100">
                                                <Binding.ValidationRules>
                                                    <lc:NodeNameValidator xmlns:lc="clr-namespace:GolemUI.Validators"  ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                </StackPanel>

                            </Border>
                            <Label Margin="2,-4,0,0" Padding="0" Grid.Row="2" Foreground="#0FB2AB" Content="✓ Saved" >
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Setter Property="Visibility" Value="Collapsed" />

                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                        <Grid Height="102" Width="362" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="40"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Height="25">
                                <Label Padding="0" Margin="0" Content="Charity percentage" FontFamily="Segoe UI" FontWeight="Bold" FontSize="19" VerticalAlignment="Bottom"/>
                                <Label Margin="5,0,0,3" Padding="0"  Content="(0.0-1.0)" FontWeight="Light" FontSize="10" VerticalAlignment="Bottom"/>
                            </StackPanel>
                            <Border BorderThickness="0,0,0,2"   Margin="0, 0,40,0"  Grid.Row="1" Height="20">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="BorderBrush" Value="#45405D" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#FC476E" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#0FB2AB" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <StackPanel>
                                    <TextBox  MaxLength="45" x:Name="txtNodeName1" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" BorderThickness="0"  VerticalAlignment="Top" Background="Transparent" Foreground="#eee" CaretBrush="#fff"  Padding="0,0,0,0" Margin="0">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="true">
                                                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <TextBox.Text>
                                            <Binding Path="CharityPercentage" UpdateSourceTrigger="PropertyChanged" Delay="100">
                                                <Binding.ValidationRules>
                                                    <lc:PercentageValueValidator xmlns:lc="clr-namespace:GolemUI.Validators"  ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                </StackPanel>

                            </Border>
                            <Label Margin="2,-4,0,0" Padding="0" Grid.Row="2" Foreground="#0FB2AB" Content="✓ Saved" >
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Setter Property="Visibility" Value="Collapsed" />

                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding (Validation.HasError), ElementName=txtNodeName}" Value="false" />
                                                    <Condition Binding="{Binding NodeNameHasChanged}" Value="true" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </Grid>
                    </StackPanel>
                </Border>

            </Grid>
        </Grid>
    </Border>
</UserControl>
