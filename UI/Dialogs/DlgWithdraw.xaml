<Window x:Class="GolemUI.UI.Dialogs.DlgWithdraw"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GolemUI.UI"
        xmlns:lm="clr-namespace:GolemUI.Model"
        xmlns:lc="clr-namespace:GolemUI.Validators"        
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="Edit Wallet Address" Width="666" Height="416" VerticalAlignment="Center" ResizeMode="NoResize"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        xmlns:stateEnum="clr-namespace:GolemUI.ViewModel.Dialogs"
        xmlns:dvm="clr-namespace:GolemUI.DesignViewModel.Dialogs"
        d:DataContext ="{d:DesignInstance {x:Type dvm:DlgWithdrawViewModel}, IsDesignTimeCreatable=True}"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/UI/Themes/Defaults.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Borders/PageBackground.xaml"/>
                <ResourceDictionary Source="/UI/Themes/WindowControls.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/GradientButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/CancelButton.xaml"/>
                <ResourceDictionary Source="/UI/Themes/TextBox/TextBoxInError.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Validation/ValidationTemplate.xaml"/>
                <ResourceDictionary Source="/UI/Themes/CheckBox/GpuCheckBox.xaml"/>
                <ResourceDictionary Source="/UI/Themes/Buttons/UnderlineButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Border BorderBrush="#999"  BorderThickness="1" CornerRadius="12" Background="{DynamicResource SetupWindow.Background}" >
        <Grid>
            <DockPanel x:Name="TitleBar" VerticalAlignment="Top"  HorizontalAlignment="Right" DockPanel.Dock="Top">
                <Button x:Name="CloseButton" Content="Close" DockPanel.Dock="Right" Click="BtnClose_Click" Style="{DynamicResource CloseWindowButton}" Margin="0,0,8,0"/>
            </DockPanel>
            <TabControl BorderThickness="0"  x:Name="tabControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Margin="0,25,0,0" >
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Visibility" Value="Hidden"></Setter>
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabItem Header="Prepare" Background="Transparent">
                    <Grid>
                        <StackPanel Margin="79,30">
                            <Label Content="Withdraw options" FontSize="14" Margin="0,0,0,20" Padding="0"/>
                            <UniformGrid Height="48"  Columns="2">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <StackPanel VerticalAlignment="Bottom">
                                        <Label Foreground="#99b" Padding="0">Available</Label>
                                        <Label  Padding="0" Margin="0" 
                                                VerticalAlignment="Bottom" 
                                                FontWeight="Bold" FontSize="20" 
                                                Content="{Binding AvailableGLM, Mode=OneWay, Converter={StaticResource AmountConverter}, ConverterParameter=GLM}"/>
                                    </StackPanel>
                                    <Label VerticalAlignment="Bottom" Margin="10,2" Foreground="#99b" Content="{Binding Path=AvailableUSD, Converter={StaticResource AmountConverter}, ConverterParameter=USD}" Padding="0"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                                    <TextBox Width="200" FontSize="16" Style="{StaticResource TextBoxInError}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" BorderThickness="0,0,0,2" VerticalAlignment="Top" Background="Transparent" Foreground="#eee" CaretBrush="#fff" Margin="0,  0,0,0"  Padding="0,0,0,5">
                                        <TextBox.Text>
                                            <Binding Path="Amount" UpdateSourceTrigger="PropertyChanged" Delay="100">
                                                <!-- TODO -->
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Style="{StaticResource UnderlineButtonStyle}" VerticalAlignment="Center" x:Name="BtnSetMax" Content="SET MAX" Click="BtnSetMax_Click" Margin="0" HorizontalAlignment="Right"/>
                                </StackPanel>
                            </UniformGrid>
                            <TextBox  FontSize="16" Style="{StaticResource TextBoxInError}" Validation.ErrorTemplate="{StaticResource ValidationTemplate}" BorderThickness="0,0,0,2" VerticalAlignment="Top" Background="Transparent" Foreground="#eee" CaretBrush="#fff" Margin="0,  32,0,0"  Padding="0,0,0,5">
                                <TextBox.Text>
                                    <Binding Path="WithdrawAddress" UpdateSourceTrigger="PropertyChanged" Delay="100">
                                        <Binding.ValidationRules>
                                            <lc:EthAddrValidator ShouldCheckForChecksum="False" xmlns:lc="clr-namespace:GolemUI.Validators"  ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,20">
                                <CheckBox Style="{StaticResource CheckBoxGpu}" IsChecked="{Binding ShouldTransferAllTokensToL1}" />
                                <StackPanel Margin="10,0,0,0">
                                    <Label FontSize="12" FontWeight="Bold" Content="Transfer all tokens to L1 chain" Margin="0" Padding="0"/>
                                    <Label FontSize="10" Content="Make sure that you have this checkbox selected when withrdawing to the Crypto Exchange wallet address!"  Margin="0" Padding="0"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <UniformGrid Columns="2" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Margin="79,0,79,61" >
                            <Button FontSize="18" IsCancel="True" Margin="0,0,0,0" HorizontalAlignment="Stretch"   Height="45"  Click="BtnCancelStep1_Click" Style="{StaticResource CancelButtonStyle}" Content="Cancel" />
                            <Button FontSize="18" Margin="0,0,0,0" HorizontalAlignment="Stretch"  Height="45" Click="BtnConfirmStep1_Click" Content="Confirm">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource GradientButtonStyle}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=TxtWithDrawAddress, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=TxtAmount, Path=(Validation.HasError)}" Value="false" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </UniformGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Confirm">
                    <Grid>
                        <StackPanel Margin="79,30">
                            <Label Content="Withdraw confirmation" FontSize="14" Margin="0,0,0,20" Padding="0"/>

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <StackPanel>
                                    <Label Foreground="#99b" Padding="0">Sending</Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Label  Padding="0" Margin="0"  VerticalAlignment="Bottom"  FontWeight="Bold" FontSize="20"  Content="{Binding AmountGLM, Mode=OneWay, Converter={StaticResource AmountConverter}, ConverterParameter=GLM}"/>
                                        <Label   Padding="0" Margin="5,2" FontWeight="Bold" FontSize="14"  Content="GLM" VerticalAlignment="Bottom"/>
                                    </StackPanel>

                                </StackPanel>
                                <StackPanel VerticalAlignment="Bottom" Margin="10,2">
                                    <Label Foreground="#99b" Content="{Binding AmountUSDasString}" ContentStringFormat="{}{0:F2}" Padding="0"></Label>
                                </StackPanel>
                            </StackPanel>

                            <Label Margin="0,20,0,0" Foreground="#99b" Padding="0">To address</Label>
                            <Label Content="{Binding WithdrawAddress}" FontSize="16" BorderThickness="0,0,0,2" VerticalAlignment="Top" Background="Transparent" Foreground="#eee" Margin="0,  5,0,0"  Padding="0,0,0,5" />

                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0,20">
                                <StackPanel>
                                    <Label Foreground="#99b" Padding="0">TxFee</Label>
                                    <StackPanel Orientation="Horizontal">
                                        <Label  Padding="0" Margin="0"  VerticalAlignment="Bottom"  FontWeight="Bold" FontSize="20"  Content="{Binding TxFeeGLM, Mode=OneWay}" ContentStringFormat="{}{0:F4}"/>
                                        <Label  Padding="0" Margin="5,2" FontWeight="Bold" FontSize="14"  Content="GLM" VerticalAlignment="Bottom"/>
                                    </StackPanel>

                                </StackPanel>
                                <StackPanel VerticalAlignment="Bottom" Margin="10,2">
                                    <Label Foreground="#99b" Content="{Binding TxFeeUSD}" ContentStringFormat="{}{0:F2}" Padding="0"></Label>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>
                        <UniformGrid Columns="2" VerticalAlignment="Bottom"  HorizontalAlignment="Stretch" Margin="79,0,79,61" >
                            <Button FontSize="18" IsCancel="True" Margin="0,0,0,0" HorizontalAlignment="Stretch"   Height="45"  Click="BtnCancelStep2_Click" Name="BtnCancelStep2" Style="{StaticResource CancelButtonStyle}" Content="Change amount" />
                            <Button Style="{StaticResource GradientButtonStyle}" FontSize="18" Margin="0,0,0,0" HorizontalAlignment="Stretch"  Height="45"  Click="BtnConfirmStep2_Click" Name="BtnConfirmStep2" Content="Confirm" >

                            </Button>
                        </UniformGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Wait">
                    <Grid>
                        <StackPanel Margin="79,30">
                            <Label Content="{Binding WithdrawTextStatus, Mode=OneWay}" FontSize="14" Margin="0,0,0,10" Padding="0"/>
                            <Image Margin="0,10" Source="/UI/Icons/DefaultStyle/png/MiningStatus/Ready.png" Width="70" Visibility="{Binding TransactionStatus, Converter={StaticResource ValueToVisibleConverter}, ConverterParameter={x:Static stateEnum:DlgWithdrawStatus.Ok}}" />
                            <Image Margin="0,10" Source="/UI/Icons/DefaultStyle/png/MiningStatus/Error.png" Width="70" Visibility="{Binding TransactionStatus, Converter={StaticResource ValueToVisibleConverter}, ConverterParameter={x:Static stateEnum:DlgWithdrawStatus.Error}}"/>
                            <Image Margin="0,10" Source="/UI/Icons/DefaultStyle/png/MiningStatus/Idle.png" Width="70" Visibility="{Binding TransactionStatus, Converter={StaticResource ValueToVisibleConverter}, ConverterParameter={x:Static stateEnum:DlgWithdrawStatus.Pending}}"/>
                            
                            <Label Margin="0,20,0,0"  HorizontalAlignment="Center" Foreground="#99b" Padding="0">You can check the transaction on L1 and L2 explorers. If you are offboarding from L2</Label>
                            <Label HorizontalAlignment="Center" Foreground="#99b" Padding="0">keep in mind that those transactions tend to take some time.</Label>
                            <Button  Style="{StaticResource UnderlineButtonStyle}" Content="CHECK ON ETHERSCAN" HorizontalAlignment="Center" FontSize="12" Margin="0,10,0,0" Background="Transparent" BorderBrush="Transparent" x:Name="BtnCheckOnEtherScan" Click="BtnCheckOnEtherScan_Click" />
                            <Button Style="{StaticResource UnderlineButtonStyle}" Content="CHECK ON ZKSYNC EXPLORER" HorizontalAlignment="Center" FontSize="12" Background="Transparent" BorderBrush="Transparent" x:Name="BtnCheckOnZKsyncExplorer" Click="BtnCheckOnZKsyncExplorer_Click" />
                        </StackPanel>
                        <Button Style="{StaticResource GradientButtonStyle}" FontSize="18" Margin="0,0,0,22" VerticalAlignment="Bottom" Width="250" Height="45"  Click="BtnConfirmStep3_Click" Name="BtnConfirmStep3" Content="Confirm" />
                    </Grid>
                </TabItem>
            </TabControl>




        </Grid>
    </Border>
</Window>
