<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>
    

    <!-- MAIN PANEL -->

    <SolidColorBrush x:Key="Dashboard.Background" Color="#110D39"></SolidColorBrush>
    <Style x:Key="PageBackground" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Dashboard.Background}"/>
    </Style>

    <Style x:Key="InfoLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <!-- BLUE PANEL  -->

    <SolidColorBrush x:Key="BlueBox.Background" Color="#7D779E"></SolidColorBrush>
    <SolidColorBrush x:Key="BlueBox.Border" Color="#281E60"></SolidColorBrush>
    <Style x:Key="BorderStyleBlueBox" TargetType="{x:Type Border}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBox.Background}"/>
        <Setter Property="Background" Value="{StaticResource BlueBox.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="BlueBoxTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="BlueBoxTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
    </Style>

    <!-- BLUE BUTTON  -->
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#261D5E"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="blue"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="white"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="black"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#261D5E"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#AAAAAA"/>
    <Style x:Key="BlueButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Static.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Static.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Static.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PINK BUTTON  -->

    <SolidColorBrush x:Key="ButtonPink.Static.Background" Color="#D119AE"/>
    <SolidColorBrush x:Key="ButtonPink.Static.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="ButtonPink.Static.Foreground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ButtonPink.MouseOver.Background" Color="#E139DE"/>
    <SolidColorBrush x:Key="ButtonPink.MouseOver.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="ButtonPink.MouseOver.Foreground" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ButtonPink.Pressed.Background" Color="white"/>
    <SolidColorBrush x:Key="ButtonPink.Pressed.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="ButtonPink.Pressed.Foreground" Color="black"/>
    <SolidColorBrush x:Key="ButtonPink.Disabled.Background" Color="#261D5E"/>
    <SolidColorBrush x:Key="ButtonPink.Disabled.Border" Color="#74708C"/>
    <SolidColorBrush x:Key="ButtonPink.Disabled.Foreground" Color="#AAAAAA"/>
    <Style x:Key="PinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonPink.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonPink.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonPink.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPink.Static.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonPink.Static.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPink.Static.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPink.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonPink.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPink.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPink.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonPink.Pressed.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPink.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonPink.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonPink.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ButtonPink.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>