<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:local="clr-namespace:GolemUI"><SolidColorBrush x:Key="EditButton.Static.Background" Color="#D119AE"/>
<SolidColorBrush x:Key="EditButton.Static.Border" Color="#74708C"/>
<SolidColorBrush x:Key="EditButton.Static.Foreground" Color="#FFFFFF"/>
<SolidColorBrush x:Key="EditButton.MouseOver.Background" Color="#E139DE"/>
<SolidColorBrush x:Key="EditButton.MouseOver.Border" Color="#74708C"/>
<SolidColorBrush x:Key="EditButton.MouseOver.Foreground" Color="#FFFFFF"/>
<SolidColorBrush x:Key="EditButton.Pressed.Background" Color="white"/>
<SolidColorBrush x:Key="EditButton.Pressed.Border" Color="#74708C"/>
<SolidColorBrush x:Key="EditButton.Pressed.Foreground" Color="black"/>
<SolidColorBrush x:Key="EditButton.Disabled.Background" Color="#261D5E"/>
<SolidColorBrush x:Key="EditButton.Disabled.Border" Color="#74708C"/>
<SolidColorBrush x:Key="EditButton.Disabled.Foreground" Color="#AAAAAA"/>
<Style x:Key="EditButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Background" Value="{StaticResource EditButton.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource EditButton.Static.Border}"/>
    <Setter Property="Foreground" Value="{StaticResource EditButton.Static.Foreground}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                    <StackPanel>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </StackPanel>
                </Border>
                <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource EditButton.Static.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource EditButton.Static.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource EditButton.Static.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource EditButton.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource EditButton.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource EditButton.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource EditButton.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource EditButton.Pressed.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource EditButton.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource EditButton.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource EditButton.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource EditButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>-->
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<!--<Style x:Key="{x:Type local:EditButton}" TargetType="{x:Type local:EditButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditButton}">
                    <Grid>
                        <Image x:Name="Background" Source="{TemplateBinding ImageSource}" />
                        <Image Source="/UOC;component/ICON_SLICER.gif" Width="20" Height="20" Margin="0,-10,0,0"/>
                        <TextBlock Foreground="White" FontSize="9" Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,15,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Source" TargetName="Background" Value="{TemplateBinding ImageSourceHover}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Source" TargetName="Background" Value="{TemplateBinding ImageSourcePressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>